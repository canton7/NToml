<#@ template debug="false" hostspecific="true" language="C#" #><#@
assembly name="System.Core" #><#@
import namespace="System.Linq" #><#@
import namespace="System.Text" #><#@
import namespace="System.Collections.Generic" #><#@
import namespace="System.IO" #><#@
import namespace="System.Text.RegularExpressions" #><#@
output extension=".cs" #><#
var testsDirectory = Path.Combine(Path.GetDirectoryName(Host.TemplateFile), "toml-test", "tests", "invalid");
var files = Directory.GetFiles(testsDirectory,  "*.toml");
var testInfo = files.Select(file =>
{
	var fileName = Path.GetFileNameWithoutExtension(file);
	return new
	{
		TestName = Regex.Replace(fileName, "(?:^|-)(.)", match => match.Groups[1].Value.ToUpper()),
		Input = File.ReadAllText(file, Encoding.UTF8).TrimEnd('\r', '\n').Replace("\"", "\"\""),
	};
}).ToArray();
#>
using Xunit;
using System;
using NTomlUnitTests;
using NToml;

public class InvalidValidParsingTests
{
<#
	foreach (var test in testInfo)
	{

#>
	[Fact]
	public void <#= test.TestName #>()
	{
		var inputString = @"<#= test.Input #>";
		AssertHelpers.ThrowsDerived<ParseException>(() => TestDeserializer.Deserialize(inputString));
	}

<#
	}
#>
}