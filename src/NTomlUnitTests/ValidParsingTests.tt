<#@ template debug="false" hostspecific="true" language="C#" #><#@
assembly name="System.Core" #><#@
import namespace="System.Linq" #><#@
import namespace="System.Text" #><#@
import namespace="System.Collections.Generic" #><#@
import namespace="System.IO" #><#@
import namespace="System.Text.RegularExpressions" #><#@
output extension=".cs" #><#
var testsDirectory = Path.Combine(Path.GetDirectoryName(Host.TemplateFile), "toml-test", "tests", "valid");
var files = Directory.GetFiles(testsDirectory,  "*.toml");
var testInfo = files.Select(file =>
{
    var fileName = Path.GetFileNameWithoutExtension(file);
    var outputFileName = Path.Combine(testsDirectory, Path.ChangeExtension(fileName, "json"));
    return new
    {
        TestName = Regex.Replace(fileName, "(?:^|-)(.)", match => match.Groups[1].Value.ToUpper()),
        Input = File.ReadAllText(file, Encoding.UTF8).TrimEnd('\r', '\n').Replace("\"", "\"\""),
        ExpectedOutput = File.ReadAllText(outputFileName, Encoding.UTF8).TrimEnd('\r', '\n').Replace("\"", "\"\""),
    };
}).ToArray();
#>
using Xunit;
using Newtonsoft.Json;
using System.Collections.Generic;
using NTomlUnitTests;

namespace NTomlUnitTests
{
	public class ValidParsingTests
	{
<#
		foreach (var test in testInfo)
		{

#>
		[Fact]
		public void <#= test.TestName #>()
		{
			var inputString = @"<#= test.Input #>";
			var expectedOutputString = @"<#= test.ExpectedOutput #>";
			var output = (Dictionary<string, object>)TestDeserializer.Deserialize(inputString);
			var expectedOutput = (Dictionary<string, object>)JsonHelper.Deserialize(expectedOutputString);
			AssertHelpers.ObjectsEqual(expectedOutput, output);
		}
<#
		}
#>
	}
}